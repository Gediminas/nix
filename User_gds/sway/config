#!/usr/bin/env bash

### Variables
 
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# set $term kitty
# set $term wezterm
set $term alacritty

# set $lock_img ~/Downloads/Logo/nix_black2_blur.png
# set $mon_img  ~/Downloads/Logo/nix_black_eroded.png
# set $lapt_img ~/Downloads/Logo/nix_black_eroded.png
set $lapt_img ~/Downloads/Logo/nix_black2_blur.png
set $mon_img ~/Downloads/Logo/nix_black2_blur.png


###########################################################################
# Monitors
# (swaymsg -t get_outputs)

set $mon_laptop eDP-1
set $mon_asus  "Unknown ASUS MB169C+ HBLMTF011738"
set $mon_work "Dell Inc. DELL P2419HC F41RC53"
set $mon_home "Lenovo Group Limited T27hv-20 V308W93L"

output $mon_home   pos     0     0 res 2560x1440@75Hz scale 1.333
output $mon_work   pos     0     0 res 1920x1080@60Hz scale 1.0
output $mon_laptop pos   200  1080 res 2880x1800@90Hz scale 2.0

# this worked ok also
# output $mon_home   pos     0     0 res 1920x1080
# output $mon_work   pos     0     0 res 1920x1080
# output $mon_laptop pos     0  1080 res 1920x1200

# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg $mon_img  fill
output $mon_asus   bg $mon_img  fill
output $mon_work   bg $mon_img  fill
output $mon_home   bg $mon_img  fill
output $mon_laptop bg $lapt_img fill

focus_follows_mouse yes
# focus output $mon_home
# workspace * output $mon_home


###########################################################################
### Lock / idle configuration

# This will lock screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# set $lock 'swaylock --daemonize --image $lock_img --show-failed-attempts --clock'
# set $lock 'swaylock --daemonize -c "#000000" --show-failed-attempts --clock --indicator'
set $lock 'swaylock --daemonize -c 000000 --show-failed-attempts --clock --indicator --datestr %Y-%m-%d'

# Lock on close lid (works with suspend)
bindswitch --reload --locked lid:on exec $lock

exec swayidle -w \
         timeout 300  $lock \
         timeout 600  'swaymsg "output * dpms off"' \
         resume       'swaymsg "output * dpms on"' \
         before-sleep $lock \
         before-sleep 'playerctl pause' \
         lock         $lock

 #If some window in fullscreen mode, stop swayidle
for_window [class=".*"] inhibit_idle fullscreen
for_window [app_id=".*"] inhibit_idle fullscreen

 # also sway-audio-idle-inhibit

###########################################################################
### Keyboard -> Input configuration

# Help: swaymsg -t get_inputs / man 5 sway-input

#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }

input "type:keyboard" {
  xkb_model pc105
  xkb_layout lt
  xkb_variant us
  xkb_options grp:win_space_toggle

  repeat_delay 300
  repeat_rate 30
}

###########################################################################
### Keyboard -> Key bindings

# Basics:

    # bindsym $mod+Delete exec 'playerctl pause';\
    #                     exec 'swaylock -f -c 222222 -K -i $lock_img'
    bindsym $mod+Delete exec $lock

    # bindsym $mod+Shift+z exec 'playerctl pause';\
    #                      exec 'swaylock -f -c 222222 -K -i $lock_img'

    # Start a terminal
    # bindsym $mod+Return exec kitty -e tmux attach \; choose-tree -Zs
    # bindsym $mod+Return exec wezterm start tmux attach \; choose-tree -Zs
    bindsym $mod+Return exec alacritty --command tmux attach \; choose-tree -Zs
    bindsym $mod+ctrl+Return exec $term

    # Kill focused window
    # bindsym $mod+Shift+q kill
    #bindsym $mod+Escape kill
    # bindsym $mod+Alt+Ctrl+Shift+q [workspace=__focused__] kill

    # Start your launcher
    bindsym $mod+Alt+Escape                exec albert toggle
    bindsym $mod+Escape            exec wofi --show=drun --lines=10 --prompt=""
    bindsym $mod+Shift+Escape          kill
    bindsym $mod+Alt+Shift+Escape      [workspace=__focused__] kill
    # bindsym $mod+Ctrl+Shift+Escape     kill
    # bindsym $mod+Alt+Shift+Escape      kill
    # bindsym $mod+Alt+Ctrl+Escape       kill
    # bindsym $mod+Alt+Ctrl+Shift+Escape [workspace=__focused__] kill
    # bindsym $mod+Ctrl+q exec wofi --show=run  --lines=5 --prompt=""
    # bindsym $mod+Alt+q  exec dmenu_path | dmenu | xargs swaymsg exec --
    bindsym Shift+Space exec albert toggle

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Ctrl+Alt+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

###########################################################################
### Keyboard -> Moving around:

    # Move your focus around
    bindsym $mod+h     focus left
    bindsym $mod+j     focus down
    bindsym $mod+k     focus up
    bindsym $mod+l     focus right
    bindsym $mod+Left  focus left
    bindsym $mod+Right focus right
    bindsym $mod+Down  focus down
    bindsym $mod+Up    focus up
    # bindsym $mod+semicolon  focus left

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+h     move left
    bindsym $mod+Shift+j     move down
    bindsym $mod+Shift+k     move up
    bindsym $mod+Shift+l     move right
    bindsym $mod+Shift+Left  move left
    bindsym $mod+Shift+Right move right
    bindsym $mod+Shift+Down  move down
    bindsym $mod+Shift+Up    move up

    bindsym $mod+Alt+Up        focus output DP-3
    bindsym $mod+Alt+Down      focus output eDP-1
    bindsym $mod+Alt+Ctrl+Up   focus output eDP-1; move workspace to output  DP-3; focus output eDP-1
    bindsym $mod+Alt+Ctrl+Down focus output  DP-3; move workspace to output eDP-1; focus output  DP-3
    # bindsym $mod++Up           move workspace to output DP-3
    # bindsym $mod++Down         move workspace to output eDP-1

    # Focusing/Moving workspaces between screens
    bindsym $mod+Shift+Tab     move workspace to output primary
    bindsym $mod+Tab           focus output up

###########################################################################
### Keyboard -> Workspaces:

    # Switch to workspace
    bindsym $mod+0 workspace 0
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9

    bindsym $mod+a workspace A
    bindsym $mod+s workspace S
    bindsym $mod+d workspace D
    bindsym $mod+f workspace F

    bindsym $mod+q workspace Q
    bindsym $mod+w workspace W
    bindsym $mod+e workspace E
    bindsym $mod+r workspace R

    bindsym $mod+Alt+Ctrl+t border toggle

    # Move focused container to workspace
    bindsym $mod+Shift+0 move container to workspace 0
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9

    bindsym $mod+Shift+a move container to workspace A
    bindsym $mod+Shift+s move container to workspace S
    bindsym $mod+Shift+d move container to workspace D
    bindsym $mod+Shift+f move container to workspace F

    bindsym $mod+Shift+q move container to workspace Q
    bindsym $mod+Shift+w move container to workspace W
    bindsym $mod+Shift+e move container to workspace E
    bindsym $mod+Shift+r move container to workspace R

###########################################################################
### Keyboard -> Layout:

    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    # bindsym $mod+b splith
    # bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+Alt+s layout stacking
    bindsym $mod+Alt+w layout tabbed
    bindsym $mod+Alt+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+z fullscreen

    # Toggle the current focus between tiling and floating mode
    #bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    #bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+Alt+a focus parent

###########################################################################
### Resizing containers:

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym h resize shrink width 10px
    bindsym j resize grow height 10px
    bindsym k resize shrink height 10px
    bindsym l resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Alt+Ctrl+r mode "resize"

###########################################################################
### 

mode "prefix" {

    # bindsym ; "splitv; exec $term"
    bindsym l "exec $term; mode 'default'"

    # # left will shrink the containers width
    # # right will grow the containers width
    # # up will shrink the containers height
    # # down will grow the containers height
    # bindsym h resize shrink width 10px
    # bindsym j resize grow height 10px
    # bindsym k resize shrink height 10px
    # bindsym l resize grow width 10px

    # # Ditto, with arrow keys
    # bindsym Left resize shrink width 10px
    # bindsym Down resize grow height 10px
    # bindsym Up resize shrink height 10px
    # bindsym Right resize grow width 10px

    # Return to default mode
    # bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+b mode "prefix"

###########################################################################
### Other keybindings:

 # capture all screens to clipboard
bindsym Shift+Print exec grim - | wl-copy

# capture the specified screen area to clipboard
# bindsym $mod+p exec grim -g "$(slurp -b 00400040 -d)" - | wl-copy
# bindsym $mod+p exec grim -g "$(slurp)" - | swappy -f -
bindsym $mod+p exec flameshot gui

# capture the full desktop into file
# bindsym $mod+Shift+p exec grim -g "$(slurp -b 00004040 -d)" ~/sync/_Inbox_sync_/screenshots/scr_$(date +'%Y-%m-%d_%H-%M-%S').png
bindsym $mod+Shift+p exec flameshot full

# bindsym $mod+Alt+p exec wf-recorder -g "$(slurp -b 40000040 -d)" --file=~/sync/_Inbox_sync_/screenshots/rec_$(date +'%Y-%m-%d_%H-%M-%S').mp4
# capture the focused monitor to clipboard
# bindsym Shift+Control+Print exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') - | wl-copy

# bindsym $mod+Backslash exec playerctl play-pause

# XF86 keys
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym Shift+XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +1%
bindsym Shift+XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -1%
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86MonBrightnessDown exec --no-startup-id "brightnessctl s 5%-"
bindsym XF86MonBrightnessUp   exec --no-startup-id "brightnessctl s 5%+"
bindsym Shift+XF86MonBrightnessDown exec --no-startup-id "brightnessctl s 1%-"
bindsym Shift+XF86MonBrightnessUp   exec --no-startup-id "brightnessctl s 1%+"

# push-to-talk
# bindsym $mod+space exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ 0 # mute mic
# bindsym --release $mod+space exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ 1 # unmute mic

#bindsym $mod+n exec playerctrl -10
#bindsym $mod+m exec playerctrl +10


###########################################################################
### GUI:

hide_edge_borders smart
default_border pixel 2
default_floating_border pixel 1

#              ttl-bord   ttl-bg    ttl-fg    new-view  the-border
client.focused "#444444" "#444444" "#00aaff" "#0000ff" "#00aaff"


###########################################################################
### Specifics

for_window [app_id="ffnotes"] resize set width 30 ppt
for_window [app_id="ffnotes"] resize set height 30 ppt

###########################################################################
### Scratchpad


    # Your preferred application launcher
    # Note: pass the final command to swaymsg so that the resulting window can be opened
    # on the original workspace that the command was r

    #swaymsg -t get_tree | grep app_id
    #swaymsg -t get_tree | grep class

    ###########################################
    ## Notes - Simplenote
    #
    # for_window [class="Simplenote"] {
    #     move scratchpad
    #     #resize set 1024 768
    #     border pixel 4
    #     border toggle
    #     scratchpad show
    # }
    # bindsym $mod+minus exec swaymsg [class="Simplenote"] scratchpad show || exec Simplenote

    ###########################################
    # ## Notes tmux+nvim/hx - Disabled
    #
    set $notes $term --title Notes --working-directory ~/Notes --command tmux -u new -A -s NOTES
    for_window [title="^Notes$"] {
        move scratchpad
        resize set 1000 800
        border pixel 1
        border toggle
        scratchpad show
    }
    bindsym $mod+minus exec swaymsg [title="Notes"] scratchpad show || exec $notes

    ###########################################
    # ## Notes wine+Resophnotes - Disabled
    #
    # set $notes ~/apps/resophnotes.sh 
    # for_window [class="resophnotes.exe"] {
    # bindsym $mod+minus exec swaymsg [class="resophnotes.exe"] scratchpad show || exec $notes

    ###########################################
    ## Spotify

    #for_window [class="Spotify"] {
    #    move scratchpad
    #    resize set 1024 768
    #    border pixel 4
    #    border toggle
    #    scratchpad show
    #}
    #bindsym $mod+equal exec swaymsg [class="Spotify"] scratchpad show
    #bindsym $mod+Ctrl+equal exec swaymsg [class="Spotify"] scratchpad show || exec spotify



    #bindsym $mod+Shift+minus move scratchpad
    #bindsym $mod+minus scratchpad show

###########################################################################
### Status Bar:

bar {
    swaybar_command waybar
}

###########################################################################
include /etc/sway/config.d/*
###########################################################################


# exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway


# DISABLED: Unlikely, but could cause hangs after sleep
# exec_always (pkill kanshi; sleep 2s; kanshi) &

exec (sleep 2s && nm-applet --indicator) &
exec (sleep 4s && blueman-applet) &
exec (sleep 10s && $HOME/dev/inhibit-bridge/bin/inhibit-bridge -manual_inhibit_timeout 360m) &

exec swaymsg "workspace 7; exec alacritty --command tmux -u new -A -s SYSTEM; workspace S; exec brave"

# bindsym $mod+period exec dunstctl close #- panguin + backspace
# bindsym $mod+comma exec dunstctl history-pop ###- penguing + dot


